# -*- coding: utf-8 -*-
"""#Task04.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OB6cok9rVYCbKODIzUpirF7K6rfRhCMA

# **PRODIGY INFOTECH - DATA SCIENCE INTERNSHIP**

### **Name : Gauri Baban Dhembare**

### **Task - 04**

Analyze and visualize sentiment patterns in social media data to understand public opinion and attitudes towards specific topics or brands.

# **Loading Required Libraries**
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

"""# **Loading Dataset**"""

train=pd.read_csv("/content/twitter_training.csv.zip")
train

test=pd.read_csv("/content/twitter_validation.csv")
test

train.head()

test.head()

train.tail()

test.tail()

train.describe()

test.describe()

train.info()

test.info()

train.size

test.size

test.dtypes

train.dtypes

train.columns

test.columns

"""### **Headers for columm in each dataframe**"""

train.columns=["id","company","sentiment","tweets"]
test.columns=["id","company","sentiment","tweets"]

#Display first few rows of both datasets
print(train.head())
print("______________________________________________________")
print(test.head())

"""## **Merging two datasets**"""

sentiment=pd.concat([train,test],ignore_index=True)
sentiment

"""### **Exploratory Data Analysis**"""

sentiment.info()

sentiment.describe()

sentiment.shape

sentiment.columns

sentiment.size

sentiment.dtypes

print(sentiment["sentiment"].value_counts())

"""### **Data Cleaning and Data Processing**"""

sentiment.isnull()

sentiment.isnull().sum()

sentiment.drop_duplicates(inplace=True)
sentiment.duplicated().sum()

sentiment["tweets"]=sentiment["tweets"].str.lower()
sentiment["tweets"]=sentiment["tweets"].str.replace("[^\w\s]," ,"")
sentiment.head(10)

# Exploratory Data Analysis (EDA)
# Sentiment distribution
plt.figure(figsize=(10, 5))
sns.countplot(data=sentiment, palette="Set2", x='sentiment')
plt.title('Sentiment Distribution ')
plt.xlabel('Sentiment')
plt.ylabel('Count')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud
# Example Data
data = {
    'text': [
        'I love this product, it is amazing!',
        'This is the worst service ever.',
        'Had a fantastic experience, will come again.',
        'Absolutely terrible, will not recommend.',
        'Very happy with the purchase, great quality.',
        'Awful experience, very disappointed.' ],
    'sentiment': ['positive', 'negative', 'positive', 'negative', 'positive', 'negative']
}
sentiment = pd.DataFrame(data)

# Word Cloud for Positive Sentiments
positive_texts = sentiment[sentiment['sentiment'] == 'positive']['text']
positive_words = ' '.join(positive_texts)
positive_wordcloud = WordCloud(width=800, height=400, background_color='white').generate(positive_words)

plt.figure(figsize=(10, 5))
plt.imshow(positive_wordcloud, interpolation='bilinear')
plt.title('Word Cloud for Positive Sentiments')
plt.axis('off')
plt.show()

# Word Cloud for Negative Sentiments
negative_texts = sentiment[sentiment['sentiment'] == 'negative']['text']
negative_words = ' '.join(negative_texts)
negative_wordcloud = WordCloud(width=800, height=400, background_color='white').generate(negative_words)

plt.figure(figsize=(10, 5))
plt.imshow(negative_wordcloud, interpolation='bilinear')
plt.title('Word Cloud for Negative Sentiments')
plt.axis('off')
plt.show()

# Example Data
data = {
    'id': [1, 2, 3, 4, 5, 6],
    'company': ['Company A', 'Company B', 'Company A', 'Company B', 'Company A', 'Company B'],
    'sentiment': ['positive', 'negative', 'positive', 'negative', 'positive', 'negative'],
    'tweets': [
        'I love this product, it is amazing!',
        'This is the worst service ever.',
        'Had a fantastic experience, will come again.',
        'Absolutely terrible, will not recommend.',
        'Very happy with the purchase, great quality.',
        'Awful experience, very disappointed.'
    ]
}
df = pd.DataFrame(data)

# Count plot for sentiment distribution by company
plt.figure(figsize=(12, 6))
sns.countplot(data=df, x='company', hue='sentiment', palette="Set2")
plt.title('Sentiment Distribution by Company')
plt.xlabel('Company')
plt.ylabel('Count')
plt.legend(title='Sentiment')
plt.show()

# Get unique companies
companies = df['company'].unique()

# Plot pie charts for each company
fig, axes = plt.subplots(1, len(companies), figsize=(16, 8))

for ax, company in zip(axes, companies):
    company_data = df[df['company'] == company]['sentiment'].value_counts()
    ax.pie(company_data, labels=company_data.index, autopct='%1.1f%%', colors=sns.color_palette("Set2"))
    ax.set_title(f'Sentiment Distribution for {company}')

plt.tight_layout()
plt.show()